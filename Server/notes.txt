To access virtual enviroment in terminal type cd (drag and drop folder into terminal)
To upgrade the virtual enviroment use 
    update: py -m pip install --upgrade pip

To create a virtual enviroment we need to 
    install: py -m pip install virtualenv
Now that we have found the virtual enviroment libary, we want to create a virtual enviroment
    py -m venv (name of a folder)
Now we need to activate the virtual enviroment 
    mac users: source venv/bin/activate
    window users: venv\Scripts\activate
***REMEMBER YOU NEED TO LOCATED IN THE FOLDER OF THE PROJECT***\

Install flask in venv
    py -m pip install flask
How to check the flask version
    flask --version

Flask creates a API ==> establishes a connection between computer and server

Creating a API (Application Programming Interface)
You have to import flask libary (from flask import Flask)
Create a application 
    app = Flask(__name__) this means getting the name from root of the project 

SRP ==> single responsibility priciple

Clean Code Rules: https://gist.github.com/wojteklu/73c6914cc446146b8b533c0988cf8d29

SQL ==> you manage the database ==> is its own seperate language ==> deals with logic ==> NEED TO DO RESEARCH

DBMS ==> database managment system 

MongoDB ==> establish connection with database using python ==> https://www.mongodb.com/

MongoDB ==> username: Jesse ==> password: Letssmoke1!!

Need to establish connection: 
    * create new folder called config.py
    * import pymongo
    * import certifi (after install) ==> you add certifi at the end of the install of the database (ex: py -m pip install "pymongo[srv]" certifi)
    * add the connection string (ex: con_str = "mongodb+srv://Jesse:Letssmoke1!!@107-ch46.0kayhxj.mongodb.net/?retryWrites=true&w=majority&appName=107-ch46") 
    * connect client to database (ex: client = pymongo.MongoClient(con_str,tlsCAfile=certifi.where()))
    * connect client to database2 (ex: db = client.get_database("name_of_database"))



